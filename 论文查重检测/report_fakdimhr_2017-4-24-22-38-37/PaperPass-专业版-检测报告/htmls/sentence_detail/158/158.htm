<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN""http://www.w3.org/TR/html4/loose.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<title>PaperPass 最权威论文抄袭检测系统</title>
<style type="text/css">
<!--
user_icon {
color: #FFFFFF;
}
body,td,th {
font-family: "微软雅黑";
font-size: 13px;
}
h1,h2,h3,h4,h5,h6 {
font-family: "宋体";
}
demo_padding {
line-height: 30px;
}
html
{
overflow-x:hidden;
overflow-y:scroll;
}
.liebiao {
border-bottom-width: 1px;
border-bottom-style: dashed;
border-bottom-color: #CCCCCC;
height: 0px;
margin-top:10px;
margin-bottom:10px;
float: left;
width: 90%;
}
.liebiao ul {
list-style-type: none;
display: block;
margin: 0px;
clear: none;
}
.zhengwen {
padding-right: 15px;
padding-left: 0px;
margin-bottom:10px;
font-size: 13px;
line-height: 20px;
color: #666666;
}
.zhengwencenter {
padding-right: 15px;
padding-left: 0px;
margin-bottom:10px;
font-size: 13px;
line-height: 20px;
color: #666666;
text-align:center
}
.neikuang {
background-color: #EBEBEB;
border: 1px dashed #999999;
padding-right: 10px;
padding-left: 10px;
}
.shubu{
float: left;
height: 15px;
width: 15px;
background-color: #FFFFFF;
border: 1px solid #999999;
text-align: center;
vertical-align: middle;
display: block;
font-size: 13px;
}
.kuang {
border: 1px solid #999999;
}
.red{color:#FF0000}
.orange{color:#FF6600}
.green{color:#008000}

a:hover {color:#000000}
a:active {color:#000000}

a{TEXT-DECORATION:none}

-->
</style>
</head>
<body>
<div class="zhengwen"><b>综合<sup>3</sup></b>&nbsp;&nbsp;|&nbsp;&nbsp;<a href="158_local.htm">本地库<sup>3</sup></a>（<a href="158_periodical.htm">期刊<sup>1</sup></a>、<a href="158_thesis.htm">学位<sup>2</sup></a>、<a href="158_conference.htm">会议<sup></sup></a>、<a href="158_book.htm">图书<sup>No</sup></a>）&nbsp;&nbsp;|&nbsp;&nbsp;<a href="158_net.htm">互联网<sup></sup></a><br /></div>
<div class="zhengwen">
语句：<span class='orange' >IOC一般分为两种类型，一种是依赖注入（Dependency Injection），另一种是依赖查找（Dependency Lookup），其中，依赖注入运用的更加广泛。</span><br><br>
<div style="display:block;">该句相似度：<span class='orange' >43</span>%<a href='#xiugaijianyi' style='padding-left:30px;'>查看该句修改建议</a><b>（轻度相似，请酌情修改）</b><br><br></div>
在本地库和互联网共找出相似内容：3个
</div>

<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">1</div>
<font color="#666666">相似度：</font><span class='orange' >43</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">您的句子（灰色背景是与相似句子重合的部分）：</font><br>
<span class='orange' ><span style="background:#cbcbcb">IOC</span>一般分为两种类型，一种是<span style="background:#cbcbcb">依赖</span><span style="background:#cbcbcb">注入</span>（DependencyInjection），另一种是<span style="background:#cbcbcb">依赖</span><span style="background:#cbcbcb">查找</span>（DependencyLookup），其中，<span style="background:#cbcbcb">依赖</span><span style="background:#cbcbcb">注入</span>运用<span style="background:#cbcbcb">的</span>更加广泛。</span><br>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子：</font><br>
<span class="green">时需要直接依靠代码<span style="background:#cbcbcb">的</span>方式。1.<span style="background:#cbcbcb">依赖</span><span style="background:#cbcbcb">注入</span><span style="background:#cbcbcb">的</span>原理与实现<span style="background:#cbcbcb">依赖</span><span style="background:#cbcbcb">注入</span>（DI）和<span style="background:#cbcbcb">依赖</span><span style="background:#cbcbcb">查找</span>（DependencyLookup）共同组成控制反转（<span style="background:#cbcbcb">IoC</span>）。</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子原文片段：</font><br>
……业务逻辑组件和控制器组件，举例说明了依赖注入在项目中的应用。关键词：依赖注入；Spring；控制反转引言ofControl）是Spring框架结构的核心之一。基于Spring框架结构的系统中，DI可以为任意对象动态的提供所需，代替了过去在控制对象生命周期和关系<span class='green'>时需要直接依靠代码的方式。1.依赖注入的原理与实现依赖注入（DI）和依赖查找（DependencyLookup）共同组成控制反转（IoC）。</span>从原理的角度来说，依赖注入和控制反转是没有不同的，可以看作是从两个角度来阐述一个概念，即基于Spring的架构系统中，……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学术期刊)：</font><br>
<b>篇名：</b>《基于Spring框架的依赖注入研究》<br><b>作者：</b>王臻 郭芊羽<br><b>作者单位：</b>廊坊职业技术学院计算机科学与工程系<br><b>参考文献：</b>3篇<br><b>页码：</b>P358—P358<br><b>页数：</b>1页<br><b>期刊名称：</b>《才智》<br><b>出版时间：</b>2014年34期<br><b>ISSN：</b>1673-0208<br><b>关键词：</b>依赖注入 Spring 控制反转<br><b>摘要：</b>从系统开发的应用角度，阐述了依赖注入的原理、实现方式、两种注入方式的对比以及依赖注入的优势，并通过业务逻辑组件和控制器组件，举例说明了依赖注入在项目中的应用。
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">2</div>
<font color="#666666">相似度：</font><span class='orange' >42</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">您的句子（灰色背景是与相似句子重合的部分）：</font><br>
<span class='orange' ><span style="background:#cbcbcb">IOC</span>一般分为两种类型，<span style="background:#cbcbcb">一种</span><span style="background:#cbcbcb">是</span><span style="background:#cbcbcb">依赖</span><span style="background:#cbcbcb">注入</span>（DependencyInjection），<span style="background:#cbcbcb">另</span><span style="background:#cbcbcb">一种</span><span style="background:#cbcbcb">是</span><span style="background:#cbcbcb">依赖</span>查找（DependencyLookup），其中，<span style="background:#cbcbcb">依赖</span><span style="background:#cbcbcb">注入</span>运用<span style="background:#cbcbcb">的</span>更加广泛。</span><br>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子：</font><br>
<span class="green"><span style="background:#cbcbcb">的</span>。而对于<span style="background:#cbcbcb">依赖</span><span style="background:#cbcbcb">注入</span>(DependencyInjection，DI)，则<span style="background:#cbcbcb">是</span><span style="background:#cbcbcb">另</span><span style="background:#cbcbcb">一种</span><span style="background:#cbcbcb">依赖</span><span style="background:#cbcbcb">注入</span><span style="background:#cbcbcb">的</span>方式，DI模式<span style="background:#cbcbcb">是</span>对<span style="background:#cbcbcb">IoC</span>模式<span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">一种</span>扩展<span style="background:#cbcbcb">的</span>解释126】。</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子原文片段：</font><br>
……质量下降，特别是当需求发生变化时，代码维护的代价相当高【25】。因此，系统内不必要的依赖关系要尽量想办法控制，这样会大大增加了系统的扩展性和灵活性。IoC模式，即控制反转，IoC就是为了解决系统内不必要的耦合关系而产生<span class='green'>的。而对于依赖注入(DependencyInjection，DI)，则是另一种依赖注入的方式，DI模式是对IoC模式的一种扩展的解释126】。</span>Spring的IoC容器使用的就是DI模式。创建的对象实例任务被D1分开，也是IoC的一种扩展。IoC是一种用来解决组件之间依赖关系……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学位论文)：</font><br>
<b>篇名：</b>《基于J2EE在线学习平台的设计与实现》<br><b>作者：</b>荆云鹏<br><b>学科专业：</b>计算机系统结构<br><b>授予学位：</b>硕士<br><b>导师姓名：</b>丁振国<br><b>学位授予单位：</b>西安电子科技大学<br><b>学位年度：</b>2011
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">3</div>
<font color="#666666">相似度：</font><span class='orange' >41</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">您的句子（灰色背景是与相似句子重合的部分）：</font><br>
<span class='orange' >IOC一般分为两种类型，一种是<span style="background:#cbcbcb">依赖</span><span style="background:#cbcbcb">注入</span>（DependencyInjection），另一种是<span style="background:#cbcbcb">依赖</span>查找（DependencyLookup），其中，<span style="background:#cbcbcb">依赖</span><span style="background:#cbcbcb">注入</span>运用<span style="background:#cbcbcb">的</span>更加广泛。</span><br>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子：</font><br>
<span class="green">关系可以通过途径<span style="background:#cbcbcb">的</span>路子，例如<span style="background:#cbcbcb">依赖</span><span style="background:#cbcbcb">注入</span>（DependencyInjection服务提供供职供应者（ServiceLocator）模式。前者通过从外部<span style="background:#cbcbcb">注入</span>所<span style="background:#cbcbcb">依赖</span><span style="background:#cbcbcb">的</span>模块领域基于范围</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子原文片段：</font><br>
……得到来自外部的才能，才华良好设计杰出的模块能够在一起协调地尽管。即便解耦模块使得设计趋于合理，但是由此引出对象处理东西间依赖关系的更加则加倍繁琐，尤其是当软件系统基于组件开发时装配用于装置组件的工作就成为一笔额外的开销。处理模块对外部的依赖<span class='green'>关系可以通过途径的路子，例如依赖注入（DependencyInjection服务提供供职供应者（ServiceLocator）模式。前者通过从外部注入所依赖的模块领域基于范围</span>驱动设计的自动半主动售票机软件的设计解析实现分化依赖，后者则通过从服务提供供职供应者来完成相同的工作。在本文所涉及的……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学位论文)：</font><br>
<b>篇名：</b>《基于领域驱动设计的AFC半自动售票机软件的设计与实现》<br><b>作者：</b>汪汇<br><b>分类号：</b>TP311.52<br><b>学科专业：</b>软件工程<br><b>授予学位：</b>硕士<br><b>导师姓名：</b>许峰<br><b>学位授予单位：</b>上海交通大学<br><b>学位年度：</b>2012<br><b>关键词：</b>自动售检票系统 领域驱动设计 框架耦合 模块设计 可扩展性
</td>
</tr>
</table>




<div style="display:block;">
<table id="xiugaijianyi" width="100%" cellpadding="3" cellspacing="3" style="margin-bottom:15px;margin-top:15px;border: 1px solid #C0C0C0;"
bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF">
<tbody>
<tr>
<td width="100%">
<div class="green" style="font-size:17px;padding-left:5px;">
该句修改建议（轻度相似，请酌情修改）
</div>
</td>
</tr>
<tr>
<td>
<div class="shubu">
1
</div>
<span style="  padding-left:10px;font-size:15px;">
原句与相似内容重合部分（重点修改标红部分）：
</span>
</td>
</tr>
<tr>
<td>
<font class="green">
<span class="red">IOC</span>一般分为两种类型，一种是<span class="red">依赖</span><span class="red">注入</span>（DependencyInjection），另一种是<span class="red">依赖</span><span class="red">查找</span>（DependencyLookup），其中，<span class="red">依赖</span><span class="red">注入</span>运用的更加广泛。
</font>
</td>
</tr>
<tr>
<td>
<div class="shubu">
2
</div>
<span style="  padding-left:10px;font-size:15px;">
同义词：
</span>
</td>
</tr>
<tr>
<td width="100%" align="left">
<span class="red">其中：</span><span class="green">个中 此中 </span><br/> <span class="red">更加：</span><span class="green">加倍 越发 </span><br/> <span class="red">广泛：</span><span class="green">普及 普遍 遍及 </span><br/>
</td>
</tr>
</tbody>
</table>
</div>

<div style="display:block;">
<a href="#">回到顶部</a>
</div>

<div style="margin-bottom:100px"></div>
<div class="zhengwencenter">
<p>
检测报告由<a href="http://www.paperpass.com/" target="_blank">PaperPass</a>文献相似度检测系统生成
</p>
<p>
Copyright © 2007-2017 PaperPass
</p>
</div>
<div style="margin-bottom:700px"></div>
</body>
</html>
